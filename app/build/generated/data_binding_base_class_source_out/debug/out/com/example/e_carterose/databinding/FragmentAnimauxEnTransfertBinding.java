// Generated by view binder compiler. Do not edit!
package com.example.e_carterose.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.e_carterose.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAnimauxEnTransfertBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView TitreAnimauxEnTransfert;

  @NonNull
  public final LinearLayout arrivalsAnimalsContainer;

  @NonNull
  public final LinearLayout departuresAnimalsContainer;

  @NonNull
  public final LinearLayout slaughterhouseAnimalsContainer;

  private FragmentAnimauxEnTransfertBinding(@NonNull ScrollView rootView,
      @NonNull TextView TitreAnimauxEnTransfert, @NonNull LinearLayout arrivalsAnimalsContainer,
      @NonNull LinearLayout departuresAnimalsContainer,
      @NonNull LinearLayout slaughterhouseAnimalsContainer) {
    this.rootView = rootView;
    this.TitreAnimauxEnTransfert = TitreAnimauxEnTransfert;
    this.arrivalsAnimalsContainer = arrivalsAnimalsContainer;
    this.departuresAnimalsContainer = departuresAnimalsContainer;
    this.slaughterhouseAnimalsContainer = slaughterhouseAnimalsContainer;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAnimauxEnTransfertBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAnimauxEnTransfertBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_animaux_en_transfert, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAnimauxEnTransfertBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.TitreAnimauxEnTransfert;
      TextView TitreAnimauxEnTransfert = ViewBindings.findChildViewById(rootView, id);
      if (TitreAnimauxEnTransfert == null) {
        break missingId;
      }

      id = R.id.arrivals_animals_container;
      LinearLayout arrivalsAnimalsContainer = ViewBindings.findChildViewById(rootView, id);
      if (arrivalsAnimalsContainer == null) {
        break missingId;
      }

      id = R.id.departures_animals_container;
      LinearLayout departuresAnimalsContainer = ViewBindings.findChildViewById(rootView, id);
      if (departuresAnimalsContainer == null) {
        break missingId;
      }

      id = R.id.slaughterhouse_animals_container;
      LinearLayout slaughterhouseAnimalsContainer = ViewBindings.findChildViewById(rootView, id);
      if (slaughterhouseAnimalsContainer == null) {
        break missingId;
      }

      return new FragmentAnimauxEnTransfertBinding((ScrollView) rootView, TitreAnimauxEnTransfert,
          arrivalsAnimalsContainer, departuresAnimalsContainer, slaughterhouseAnimalsContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
