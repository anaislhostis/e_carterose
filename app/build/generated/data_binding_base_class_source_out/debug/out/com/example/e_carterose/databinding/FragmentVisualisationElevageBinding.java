// Generated by view binder compiler. Do not edit!
package com.example.e_carterose.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.e_carterose.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentVisualisationElevageBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final LinearLayout animalsContainer;

  @NonNull
  public final SearchView searchView;

  @NonNull
  public final TextView textViewAttestation;

  @NonNull
  public final TextView textViewNomElevage;

  private FragmentVisualisationElevageBinding(@NonNull ScrollView rootView,
      @NonNull LinearLayout animalsContainer, @NonNull SearchView searchView,
      @NonNull TextView textViewAttestation, @NonNull TextView textViewNomElevage) {
    this.rootView = rootView;
    this.animalsContainer = animalsContainer;
    this.searchView = searchView;
    this.textViewAttestation = textViewAttestation;
    this.textViewNomElevage = textViewNomElevage;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentVisualisationElevageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentVisualisationElevageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_visualisation_elevage, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentVisualisationElevageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.animals_container;
      LinearLayout animalsContainer = ViewBindings.findChildViewById(rootView, id);
      if (animalsContainer == null) {
        break missingId;
      }

      id = R.id.searchView;
      SearchView searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }

      id = R.id.text_view_attestation;
      TextView textViewAttestation = ViewBindings.findChildViewById(rootView, id);
      if (textViewAttestation == null) {
        break missingId;
      }

      id = R.id.text_view_nom_elevage;
      TextView textViewNomElevage = ViewBindings.findChildViewById(rootView, id);
      if (textViewNomElevage == null) {
        break missingId;
      }

      return new FragmentVisualisationElevageBinding((ScrollView) rootView, animalsContainer,
          searchView, textViewAttestation, textViewNomElevage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
